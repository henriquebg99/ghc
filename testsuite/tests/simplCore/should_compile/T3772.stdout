
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 48, types: 20, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3772.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T3772.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3772.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3772.$trModule3 = GHC.Types.TrNameS T3772.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3772.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T3772.$trModule2 = "T3772"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3772.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3772.$trModule1 = GHC.Types.TrNameS T3772.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T3772.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3772.$trModule
  = GHC.Types.Module T3772.$trModule3 T3772.$trModule1

Rec {
-- RHS size: {terms: 14, types: 4, coercions: 0, joins: 0/0}
xs :: Int -> ()
[GblId, Arity=1, Str=<1P(1L)>, Unf=OtherCon []]
xs
  = \ (m :: Int) ->
      case m of { GHC.Types.I# ds ->
      case ds of ds1 {
        __DEFAULT -> xs (GHC.Types.I# (GHC.Prim.-# ds1 1#));
        1# -> GHC.Tuple.()
      }
      }
end Rec }

-- RHS size: {terms: 11, types: 2, coercions: 0, joins: 0/0}
T3772.$wfoo [InlPrag=NOINLINE] :: GHC.Prim.Int# -> ()
[GblId, Arity=1, Str=<L>, Unf=OtherCon []]
T3772.$wfoo
  = \ (ww :: GHC.Prim.Int#) ->
      case GHC.Prim.<# 0# ww of {
        __DEFAULT -> GHC.Tuple.();
        1# -> xs (GHC.Types.I# ww)
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
foo [InlPrag=[final]] :: Int -> ()
[GblId,
 Arity=1,
 Str=<1P(L)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w [Occ=Once1!] :: Int) ->
                 case w of { GHC.Types.I# ww1 [Occ=Once1] -> T3772.$wfoo ww1 }}]
foo
  = \ (w :: Int) -> case w of { GHC.Types.I# ww1 -> T3772.$wfoo ww1 }



