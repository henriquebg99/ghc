
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 32, types: 12, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
T3717.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3717.$trModule3 = GHC.Types.TrNameS T3717.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
T3717.$trModule2 = "T3717"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3717.$trModule1 = GHC.Types.TrNameS T3717.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T3717.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3717.$trModule
  = GHC.Types.Module T3717.$trModule3 T3717.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T3717.foo1 :: Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T3717.foo1 = GHC.Types.I# 0#

Rec {
-- RHS size: {terms: 14, types: 4, coercions: 0, joins: 0/0}
foo [Occ=LoopBreaker] :: Int -> Int
[GblId,
 Arity=1,
 Str=<1P(1L)>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds [Occ=Once1!] :: Int) ->
                 case ds of { GHC.Types.I# ds1 [Occ=Once1!] ->
                 case ds1 of ds2 [Occ=Once1] {
                   __DEFAULT -> foo (GHC.Types.I# (GHC.Prim.-# ds2 1#));
                   0# -> T3717.foo1
                 }
                 }}]
foo
  = \ (ds :: Int) ->
      case ds of { GHC.Types.I# ds1 ->
      case ds1 of ds2 {
        __DEFAULT -> foo (GHC.Types.I# (GHC.Prim.-# ds2 1#));
        0# -> T3717.foo1
      }
      }
end Rec }



