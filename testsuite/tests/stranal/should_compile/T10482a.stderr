
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 324, types: 130, coercions: 3, joins: 0/0}

-- RHS size: {terms: 9, types: 7, coercions: 0, joins: 0/0}
Foo.$WMkT4 [InlPrag=INLINE[final] CONLIKE] :: forall a. Foo a %1 -> Int %1 -> T4 a
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<SL><L>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@a_agd) (dt_aJ3 [Occ=Once1] :: Foo a_agd) (dt_aJ4 [Occ=Once1] :: Int) ->
                 case dt_aJ3 of dt_X0 [Occ=Once1] { __DEFAULT -> Foo.MkT4 @a_agd dt_X0 dt_aJ4 }}]
Foo.$WMkT4
  = \ (@a_agd) (dt_aJ3 [Occ=Once1] :: Foo a_agd) (dt_aJ4 [Occ=Once1] :: Int) ->
      case dt_aJ3 of dt_X0 [Occ=Once1] { __DEFAULT -> Foo.MkT4 @a_agd dt_X0 dt_aJ4 }

-- RHS size: {terms: 8, types: 3, coercions: 0, joins: 0/0}
Foo.$WMkT2 [InlPrag=INLINE[final] CONLIKE] :: Int %1 -> Int %1 -> T2
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<SL><L>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_aIi [Occ=Once1] :: Int) (dt_aIj [Occ=Once1] :: Int) ->
                 case dt_aIi of dt_X0 [Occ=Once1] { __DEFAULT -> Foo.MkT2 dt_X0 dt_aIj }}]
Foo.$WMkT2
  = \ (dt_aIi [Occ=Once1] :: Int) (dt_aIj [Occ=Once1] :: Int) ->
      case dt_aIi of dt_X0 [Occ=Once1] { __DEFAULT -> Foo.MkT2 dt_X0 dt_aIj }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$trModule4 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$trModule3 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$trModule3 = GHC.Types.TrNameS Foo.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$trModule2 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$trModule2 = "Foo"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$trModule1 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$trModule1 = GHC.Types.TrNameS Foo.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foo.$trModule :: GHC.Types.Module
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$trModule = GHC.Types.Module Foo.$trModule3 Foo.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rOd :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep_rOd = GHC.Types.KindRepTyConApp GHC.Types.$tcInt (GHC.Types.[] @GHC.Types.KindRep)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep1_rOe :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep1_rOe = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT5 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$tcT5 = "T2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT1 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT1 = GHC.Types.TrNameS Foo.$tcT5

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT2 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT2 = GHC.Types.TyCon 12492463661685256209## 1082997131366389398## Foo.$trModule Foo.$tcT1 0# GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_rOf :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep2_rOf = GHC.Types.KindRepTyConApp Foo.$tcT2 (GHC.Types.[] @GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_rOg :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep3_rOg = GHC.Types.KindRepFun $krep_rOd $krep2_rOf

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT1 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
Foo.$tc'MkT1 = GHC.Types.KindRepFun $krep_rOd $krep3_rOg

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT6 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Foo.$tc'MkT6 = "'MkT2"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT5 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT5 = GHC.Types.TrNameS Foo.$tc'MkT6

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT2 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT2 = GHC.Types.TyCon 5707542518475997625## 9584804394183763875## Foo.$trModule Foo.$tc'MkT5 0# Foo.$tc'MkT1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT7 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$tcT7 = "T3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT6 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT6 = GHC.Types.TrNameS Foo.$tcT7

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT3 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT3 = GHC.Types.TyCon 8915518733037212359## 16476420519216613869## Foo.$trModule Foo.$tcT6 0# GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep4_rOh :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep4_rOh = GHC.Types.KindRepTyConApp Foo.$tcT3 (GHC.Types.[] @GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_rOi :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep5_rOi = GHC.Types.KindRepFun $krep_rOd $krep4_rOh

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT7 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
Foo.$tc'MkT7 = GHC.Types.KindRepFun $krep_rOd $krep5_rOi

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT9 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Foo.$tc'MkT9 = "'MkT3"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT8 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT8 = GHC.Types.TrNameS Foo.$tc'MkT9

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT3 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT3 = GHC.Types.TyCon 7218783144619306039## 13236146459150723629## Foo.$trModule Foo.$tc'MkT8 0# Foo.$tc'MkT7

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tcFoo :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcFoo = GHC.Types.TyCon 11236787750777559483## 2472662601374496863## Foo.$trModule Foo.$trModule1 0# GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep6_rOj :: [GHC.Types.KindRep]
[GblId, Unf=OtherCon []]
$krep6_rOj = GHC.Types.: @GHC.Types.KindRep $krep1_rOe (GHC.Types.[] @GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_rOk :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep7_rOk = GHC.Types.KindRepTyConApp Foo.$tcFoo $krep6_rOj

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep8_rOl :: [GHC.Types.KindRep]
[GblId, Unf=OtherCon []]
$krep8_rOl = GHC.Types.: @GHC.Types.KindRep $krep_rOd (GHC.Types.[] @GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_rOm :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep9_rOm = GHC.Types.KindRepTyConApp Foo.$tcFoo $krep8_rOl

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'Foo1 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
Foo.$tc'Foo1 = GHC.Types.KindRepFun $krep_rOd $krep9_rOm

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'Foo3 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$tc'Foo3 = "'Foo"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'Foo2 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'Foo2 = GHC.Types.TrNameS Foo.$tc'Foo3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'Foo :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'Foo = GHC.Types.TyCon 10641757595611461765## 13961773224584044648## Foo.$trModule Foo.$tc'Foo2 0# Foo.$tc'Foo1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT9 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foo.$tcT9 = "T4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT8 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT8 = GHC.Types.TrNameS Foo.$tcT9

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tcT4 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tcT4 = GHC.Types.TyCon 15961711399118996930## 13694522307176382499## Foo.$trModule Foo.$tcT8 0# GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep10_rOn :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep10_rOn = GHC.Types.KindRepTyConApp Foo.$tcT4 $krep6_rOj

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_rOo :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
$krep11_rOo = GHC.Types.KindRepFun $krep_rOd $krep10_rOn

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT10 [InlPrag=[~]] :: GHC.Types.KindRep
[GblId, Unf=OtherCon []]
Foo.$tc'MkT10 = GHC.Types.KindRepFun $krep7_rOk $krep11_rOo

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT12 :: GHC.Prim.Addr#
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Foo.$tc'MkT12 = "'MkT4"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT11 :: GHC.Types.TrName
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT11 = GHC.Types.TrNameS Foo.$tc'MkT12

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foo.$tc'MkT4 :: GHC.Types.TyCon
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.$tc'MkT4 = GHC.Types.TyCon 6077781708614236332## 14823286043222481570## Foo.$trModule Foo.$tc'MkT11 1# Foo.$tc'MkT10

Rec {
-- RHS size: {terms: 21, types: 11, coercions: 3, joins: 0/0}
f4 [Occ=LoopBreaker] :: T4 Int -> Int
[GblId,
 Arity=1,
 Str=<1P(1L,1P(L))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dM5 [Occ=Once1!] :: T4 Int) ->
                 case ds_dM5 of { MkT4 x_aI1 [Occ=Once2] y_aI3 [Occ=Once1!] ->
                 case y_aI3 of { GHC.Types.I# x1_aNc ->
                 case GHC.Prim.># x1_aNc 0# of {
                   __DEFAULT ->
                     x_aI1
                     `cast` (Foo.D:R:FooInt0[0]
                             ; Foo.N:R:FooInt[0]
                             :: Foo Int ~R# Int);
                   1# -> f4 (Foo.MkT4 @Int x_aI1 (GHC.Types.I# (GHC.Prim.-# x1_aNc 1#)))
                 }
                 }
                 }}]
f4
  = \ (ds_dM5 :: T4 Int) ->
      case ds_dM5 of { MkT4 x_aI1 y_aI3 ->
      case y_aI3 of { GHC.Types.I# x1_aNc ->
      case GHC.Prim.># x1_aNc 0# of {
        __DEFAULT ->
          x_aI1
          `cast` (Foo.D:R:FooInt0[0]
                  ; Foo.N:R:FooInt[0]
                  :: Foo Int ~R# Int);
        1# -> f4 (Foo.MkT4 @Int x_aI1 (GHC.Types.I# (GHC.Prim.-# x1_aNc 1#)))
      }
      }
      }
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foo.f7 :: Int
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Foo.f7 = GHC.Types.I# 1#

Rec {
-- RHS size: {terms: 28, types: 8, coercions: 0, joins: 0/0}
f2 [Occ=LoopBreaker] :: T2 -> Int
[GblId,
 Arity=1,
 Str=<1P(ML,1P(L))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dMh [Occ=Once1!] :: T2) ->
                 case ds_dMh of { MkT2 x_aHX [Occ=Once2] y_aHY [Occ=Once1!] ->
                 case y_aHY of { GHC.Types.I# x1_aNc ->
                 case GHC.Prim.># x1_aNc 0# of {
                   __DEFAULT ->
                     case GHC.Prim.># x1_aNc 1# of {
                       __DEFAULT -> x_aHX;
                       1# -> Foo.f7
                     };
                   1# -> f2 (Foo.MkT2 x_aHX (GHC.Types.I# (GHC.Prim.-# x1_aNc 1#)))
                 }
                 }
                 }}]
f2
  = \ (ds_dMh :: T2) ->
      case ds_dMh of { MkT2 x_aHX y_aHY ->
      case y_aHY of { GHC.Types.I# x1_aNc ->
      case GHC.Prim.># x1_aNc 0# of {
        __DEFAULT ->
          case GHC.Prim.># x1_aNc 1# of {
            __DEFAULT -> x_aHX;
            1# -> Foo.f7
          };
        1# -> f2 (Foo.MkT2 x_aHX (GHC.Types.I# (GHC.Prim.-# x1_aNc 1#)))
      }
      }
      }
end Rec }

Rec {
-- RHS size: {terms: 22, types: 8, coercions: 0, joins: 0/0}
h [Occ=LoopBreaker] :: Int -> Int -> Bool
[GblId,
 Arity=2,
 Str=<1P(1L)><1P(L)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dMu [Occ=Once1!] :: Int) (y_au1 [Occ=Once2!] :: Int) ->
                 case ds_dMu of { GHC.Types.I# ds1_dMv [Occ=Once1!] ->
                 case ds1_dMv of ds2_X2 [Occ=Once1] {
                   __DEFAULT -> h (GHC.Types.I# (GHC.Prim.-# ds2_X2 1#)) y_au1;
                   0# -> case y_au1 of { GHC.Types.I# x_aNc [Occ=Once1] -> GHC.Prim.tagToEnum# @Bool (GHC.Prim.># x_aNc 0#) }
                 }
                 }}]
h = \ (ds_dMu :: Int) (y_au1 :: Int) ->
      case ds_dMu of { GHC.Types.I# ds1_dMv ->
      case ds1_dMv of ds2_X2 {
        __DEFAULT -> h (GHC.Types.I# (GHC.Prim.-# ds2_X2 1#)) y_au1;
        0# -> case y_au1 of { GHC.Types.I# x_aNc -> GHC.Prim.tagToEnum# @Bool (GHC.Prim.># x_aNc 0#) }
      }
      }
end Rec }

Rec {
-- RHS size: {terms: 16, types: 4, coercions: 0, joins: 0/0}
f1 [Occ=LoopBreaker] :: Int -> Int
[GblId,
 Arity=1,
 Str=<SP(SL)>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_aHW :: Int) ->
                 case h x_aHW x_aHW of {
                   False -> case x_aHW of { GHC.Types.I# x1_aNk [Occ=Once1] -> f1 (GHC.Types.I# (GHC.Prim.-# x1_aNk 1#)) };
                   True -> x_aHW
                 }}]
f1
  = \ (x_aHW :: Int) ->
      case h x_aHW x_aHW of {
        False -> case x_aHW of { GHC.Types.I# x1_aNk -> f1 (GHC.Types.I# (GHC.Prim.-# x1_aNk 1#)) };
        True -> x_aHW
      }
end Rec }

Rec {
-- RHS size: {terms: 16, types: 3, coercions: 0, joins: 0/0}
Foo.$wf3 [InlPrag=[2], Occ=LoopBreaker] :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId, Arity=2, Str=<SL><L>, Unf=OtherCon []]
Foo.$wf3
  = \ (ww_sND :: GHC.Prim.Int#) (ww1_sNI :: GHC.Prim.Int#) ->
      case h (GHC.Types.I# ww_sND) (GHC.Types.I# ww1_sNI) of {
        False -> ww_sND;
        True -> Foo.$wf3 ww_sND (GHC.Prim.-# ww1_sNI 1#)
      }
end Rec }

-- RHS size: {terms: 17, types: 9, coercions: 0, joins: 0/0}
f3 [InlPrag=[2]] :: T3 -> Int
[GblId,
 Arity=1,
 Str=<1P(1P(SL),1P(L))>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sNx [Occ=Once1!] :: T3) ->
                 case w_sNx of { MkT3 ww1_sNA [Occ=Once1!] ww2_sNF [Occ=Once1!] ->
                 case ww1_sNA of { GHC.Types.I# ww4_sND [Occ=Once1] ->
                 case ww2_sNF of { GHC.Types.I# ww6_sNI [Occ=Once1] ->
                 case Foo.$wf3 ww4_sND ww6_sNI of ww7_sNN [Occ=Once1] { __DEFAULT -> GHC.Types.I# ww7_sNN }
                 }
                 }
                 }}]
f3
  = \ (w_sNx :: T3) ->
      case w_sNx of { MkT3 ww1_sNA ww2_sNF ->
      case ww1_sNA of { GHC.Types.I# ww4_sND ->
      case ww2_sNF of { GHC.Types.I# ww6_sNI -> case Foo.$wf3 ww4_sND ww6_sNI of ww7_sNN { __DEFAULT -> GHC.Types.I# ww7_sNN } }
      }
      }



